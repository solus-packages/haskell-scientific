<PISI>
    <Source>
        <Name>haskell-scientific</Name>
        <Packager>
            <Name>Bryan T. Meyers</Name>
            <Email>bmeyers@datadrake.com</Email>
        </Packager>
        <License>BSD-3-Clause</License>
        <PartOf>programming.haskell</PartOf>
        <Summary xml:lang="en">Data.Scientific provides the number type Scientific. Scientific numbers are arbitrary precision and space efficient. They are represented using scientific notation.</Summary>
        <Description xml:lang="en">Data.Scientific provides the number type Scientific. Scientific numbers are arbitrary precision and space efficient. They are represented using scientific notation.
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://getsol.us/sources/README.Solus</Archive>
    </Source>
    <Package>
        <Name>haskell-scientific</Name>
        <Summary xml:lang="en">Data.Scientific provides the number type Scientific. Scientific numbers are arbitrary precision and space efficient. They are represented using scientific notation.</Summary>
        <Description xml:lang="en">Data.Scientific provides the number type Scientific. Scientific numbers are arbitrary precision and space efficient. They are represented using scientific notation.
</Description>
        <PartOf>programming.haskell</PartOf>
        <Files>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/scientific-0.3.6.2/Data/ByteString/Builder/Scientific.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/scientific-0.3.6.2/Data/ByteString/Builder/Scientific.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/scientific-0.3.6.2/Data/Scientific.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/scientific-0.3.6.2/Data/Scientific.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/scientific-0.3.6.2/Data/Text/Lazy/Builder/Scientific.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/scientific-0.3.6.2/Data/Text/Lazy/Builder/Scientific.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/scientific-0.3.6.2/GHC/Integer/Compat.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/scientific-0.3.6.2/GHC/Integer/Compat.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/scientific-0.3.6.2/Utils.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/scientific-0.3.6.2/Utils.hi</Path>
            <Path fileType="library">/usr/lib64/x86_64-linux-ghc-8.6.5/libHSscientific-0.3.6.2-JmxAPGwaRmCLSOBP7BT4u-ghc8.6.5.so</Path>
            <Path fileType="doc">/usr/share/doc/x86_64-linux-ghc-8.6.5/scientific-0.3.6.2/LICENSE</Path>
        </Files>
    </Package>
    <Package>
        <Name>haskell-scientific-devel</Name>
        <Summary xml:lang="en">Development files for haskell-scientific</Summary>
        <Description xml:lang="en">Data.Scientific provides the number type Scientific. Scientific numbers are arbitrary precision and space efficient. They are represented using scientific notation.
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="5">haskell-scientific</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/package.conf.d/haskell-scientific-0.3.6.2.conf</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/scientific-0.3.6.2/libHSscientific-0.3.6.2-JmxAPGwaRmCLSOBP7BT4u.a</Path>
        </Files>
    </Package>
    <History>
        <Update release="5">
            <Date>2020-12-23</Date>
            <Version>0.3.6.2</Version>
            <Comment>Packaging update</Comment>
            <Name>Bryan T. Meyers</Name>
            <Email>bmeyers@datadrake.com</Email>
        </Update>
    </History>
</PISI>